Beginning
Intro
What is programming - CPUs, asm
Python fizzbuzz
Python flask
quadratic formula

Have enough of
osi model
shell - ls, >, sed, grep, awk, env var, pipe
programming language taxonomy
Python bytecode
nosql
json
binary files (png parsing)
sockets
pointers
rust, go or other
regexes
other languages: java, c#, lisp, etc
oop
git - branches, remotes, checkout
security
diff
data structures
configuring the environment - .vimrc, .gitconfig, .bashrc etc.
useful python - len, list comp, lambda
file hashes, sym links - on pure
assert
vm's
web server

May have enough of
What is clean code
editors + macros
reading open source code
algorithms - sort, binary search, dfs, bfs, np completeness, o notation

May not need
plotting (plotly)
cron
bootstrap
opengl shaders
stack overflow profile
angular

Missing
esr
profiling
machine learning
ffi
chat web site
web crawler
gpgpu
parallel programming - threads
open source licenses
processes - unit testing, code reviews, q&a, ci

Projects done
quadratic formula - generate text data, generate json, read json, plot using plotly, store to nosql, show stats
guess number - js, binary search
web server - sockets, pointers, osi
sudoku - dfs, recursion, classes, propagate + search

Projects left
crawler - regexes
dot parsing  - regexes, fsm, proper parser, backus naur, graphs, bfs, topological sort
bus schedule - software design, strong+static languages, more algorithms, make, kiss, processes (unit testing)
http server revisited - sw design in c
timestamp sort
tech behind the book
online shop - sql, json (bootstrap?)
print return receipt - scan code, pdf, sql
