#!/usr/bin/env python2

# input format: generated by gps.py:
# <route nr> <start nr> <gps x> <gps y> <flag already passed or not>

# output format: as by sched.py:
# five rows of:
# <route nr> <start nr> <hr> <min> 0
# for all that have passed:
# <route nr> <start nr> 0 0 2

import sys
import util

time = sys.argv[1]
now_hr, now_minute = [int(n) for n in time.split(':')]

filename = sys.argv[2]
datafilename = sys.argv[3]

running_buses = list()

with open(filename, 'r') as f:
    for line in f:
        l = line.split(' ')[:5]
        routenr = int(l[0])
        startnr = int(l[1])
        gx = float(l[2])
        gy = float(l[3])
        passed = l[4] == '2'
        running_buses.append([routenr, startnr, gx, gy, passed, []])

with open(datafilename, 'r') as f:
    for line in f:
        l = line.split(' ')
        routenr = int(l[0])
        t = float(l[1])
        px = float(l[2])
        py = float(l[3])
        for bus_routenr, startnr, gx, gy, _, times in running_buses:
            if bus_routenr != routenr:
                continue
            d = util.dist((px, py), (gx, gy))
            if d < 100.0:
                times.append(t)

entries = list()
for routenr, startnr, _, _, passed, times in running_buses:
    if not passed and times:
        avgtime = sum(times) / float(len(times))
        entries.append((routenr, startnr, avgtime))

entries.sort(key=lambda (r, s, t): t)
for routenr, startnr, time in entries[:20]:
    h = now_hr
    m = int(now_minute + time)
    while m >= 60:
        m -= 60
        h += 1
    if h > 23:
        h -= 24
    print routenr, startnr, h, m, 0

for routenr, startnr, _, _, passed, _ in running_buses:
    if passed:
        print routenr, startnr, 0, 0, 2
